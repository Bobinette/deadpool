syntax = "proto3";

package pingpong;
option go_package = "protos";

import "google/protobuf/timestamp.proto";

service PingPong {
  // Connects to the server to get an id to use in other messages
  rpc Connect (ConnectRequest) returns (stream Notification) {}

  // Request a notification from the server
  rpc GetGameStatus (IdMessage) returns (GameStatus) {}

  // Let the server know the client's move for the game
  rpc Play (PlayRequest) returns (PlayReply) {}
}

// ---- Identification message
message IdMessage {
  int32 id = 1;
}

// ---- Connect
message ConnectRequest {
  string name = 1;
}

// ---- Notification
message Notification {
  oneof body {
    // Welcome event - should be sent once, when the player first connects
    IdMessage id_message = 1;

    // Game notifications
    GameEvent game_event = 2;
    GameStatus game_status = 3;
  }
}

message GameEvent {
  int32 player_id = 1;
  google.protobuf.Timestamp timestamp = 2;
}

message GameStatus {
  // The history of the conversation
  repeated GameEvent pingpong = 1;
  // The id of the player that is allowed to talk now
  int32 currentPlayer = 2;
}

// ---- Play
message PlayRequest {
  // Id of the player
  int32 id = 1;
}

message PlayReply {
  // Acceptation status - was it the player's turn to play?
  bool accepted = 1;
}

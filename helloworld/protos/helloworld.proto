syntax = "proto3";

package helloworld;
option go_package = "protos";

import "google/protobuf/timestamp.proto";

service HelloWorld {
  // Connects to the server to get an id to use in other messages
  rpc Connect (ConnectRequest) returns (IdMessage) {}
  // Let the server know the client is leaving
  rpc Leave (IdMessage) returns (LeaveReply) {}

  // Subscribe to server-side stream
  rpc Subscribe (IdMessage) returns (stream Notification) {}
  // Request a notification from the server
  rpc GetGameStatus (IdMessage) returns (GameStatus) {}

  // Let the server know the client's move for the game
  rpc Play (PlayRequest) returns (PlayReply) {}
}

// ---- General message - Could be better named
message IdMessage {
  int32 id = 1;
}

// ---- Connect
message ConnectRequest {
  string name = 1;
}

message ConnectReply {
  // Id of the player
  int32 id = 1;
}

// ---- Leave
message LeaveReply {
  // Time spent on the server in ms
  int64 time = 1;
}


// ---- Notification
message Notification {
  oneof event {
    GameEvent game_event = 1;
    GameStatus game_status = 2;

    JoinEvent join = 3;
    LeaveEvent leave = 4;
    ServerStatus server_status = 5;
  }
}

message GameEvent {
  string message = 1;
  string author = 2;
  google.protobuf.Timestamp timestamp = 3;
}

message GameStatus {
  // The history of the conversation
  repeated GameEvent chat = 1;
  // The id of the player that is allowed to talk now
  int32 currentPlayer = 2;
}

message JoinEvent {
  string player_name = 1;
  ServerStatus status = 2;
}

message LeaveEvent {
  string player_name = 1;
  ServerStatus status = 2;
}

message ServerStatus {
  int32 max = 1;
  int32 n = 2;
}

// ---- Play
message PlayRequest {
  // Id of the player
  int32 id = 1;

  // Message to transmit
  string message = 2;
}

message PlayReply {
  // Accepted status
  bool accepted = 1;

  // Response message
  string message = 2;
}
